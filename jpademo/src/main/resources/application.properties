# 编码格式
server.tomcat.uri-encoding=utf-8
#jsp
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

spring.multipart.enabled=true

####ShardingSphere 数据库配置
spring.shardingsphere.datasource.names=ds

spring.shardingsphere.datasource.ds.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds.jdbc-url=jdbc:mysql://localhost:3306/mytest?serverTimezone=UTC&useSSL=false
spring.shardingsphere.datasource.ds.username=root
spring.shardingsphere.datasource.ds.password=123456
spring.shardingsphere.datasource.ds.max-active=16


#实际表 根据id分表
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds.t_order_$->{0..9},ds.t_order_$->{'a'..'z'}
##分片键
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=id
##分片算法 根据首位数字分表 0-9 a-z 表达式里为groovy语法
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order_$->{id[0]}
#分布式主键生成方式
#spring.shardingsphere.sharding.tables.t_order.key-generator.column=order_id
#spring.shardingsphere.sharding.tables.t_order.key-generator.type=SNOWFLAKE


#spring.shardingsphere.sharding.tables.t_order.key-generator.props.worker.id=123
#spring.shardingsphere.sharding.tables.t_order_item.actual-data-nodes=ds.t_order_item_$->{0..1}
#spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.sharding-column=order_id
#spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.algorithm-expression=t_order_item_$->{order_id % 2}
#spring.shardingsphere.sharding.tables.t_order_item.key-generator.column=order_item_id
#spring.shardingsphere.sharding.tables.t_order_item.key-generator.type=SNOWFLAKE
#spring.shardingsphere.sharding.tables.t_order_item.key-generator.props.worker.id=123
#
#spring.shardingsphere.sharding.binding-tables=t_order,t_order_item
#spring.shardingsphere.sharding.broadcast-tables=t_address

#打印sql
spring.shardingsphere.props.sql.show=true


#sharding配置
#spring.shardingsphere.datasource.names=ds
#spring.shardingsphere.datasource.ds.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.ds.driver-class-name=com.mysql.jdbc.Driver
#spring.shardingsphere.datasource.ds.jdbc-url=jdbc:mysql://localhost:3306/mytest?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
#spring.shardingsphere.datasource.ds.username=root
#spring.shardingsphere.datasource.ds.password=123456
##user表 分表
#spring.shardingsphere.sharding.tables.user.actual-data-nodes=ds.user_$->{0..2}
##分片键
#spring.shardingsphere.sharding.tables.user.table-strategy.inline.sharding-column=id
##分片算法 行表达式内部的表达式本质上是一段 Groovy 代码 字符串操作 ${id[0]}${id.getAt(0)}
#spring.shardingsphere.sharding.tables.user.table-strategy.inline.algorithm-expression=user_$->{id % 3}


## JPA
#spring.jpa.show-sql=true
##see: org.springframework.orm.jpa.vendor.DataBase
#spring.jpa.database=MYSQL
#spring.jpa.hibernate.naming-strategy= org.hibernate.cfg.ImprovedNamingStrategy
#spring.jpa.open_in_view=true
##none|update|create|validate|create-drop
#spring.jpa.hibernate.ddl-auto= none

